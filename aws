https://learning.oreilly.com/learning-paths/learning-path-aws/9780135944769/9780135229415-ACSA_01_01_10

URLs
https://aws.amazon.com/certification/certified-solutions-architect-associate/
https://d1.awsstatic.com/training-and-certification/docs-sa-assoc/AWS_Certified_Solutions_Architect_Associate-Exam_Guide_EN_1.8.pdf
https://aws.amazon.com/whitepapers/?whitepapers-main.sort-by=item.additionalFields.sortDate&whitepapers-main.sort-order=desc&whitepapers-main.q=best%2Bpractices&whitepapers-main.q_operator=AND

https://aws.amazon.com/architecture/well-architected/
https://aws.amazon.com/training/self-paced-labs/

Best Practices
======================================
- Enable Scalability 
- Disposable resources instead of fixed servers
- Leverage automation
- Loose coupling (Queues, Load balances, SNS)
-  Services, not servers
- Choose the right database
- Avoid single points of failure
- Optimize for cost
- Leverage caching
- Security in layers 
======================================
Five pillars 
- Reliabilty
- Performacne efficiency
- Security
- Cost optimization
- Operational Excellence 


Reliabilty
- VPC 
- Direct Connect
- EC2
- Route 53
- ELB
- CloudWatch
- S3
- Glacier

Performance
- Auto Scaling
- Elastic Block Store
- Elastic File System
- VPC
- Elastic container service - ECS
- CloudWatch 
- RDS
- DynamoDB (NoSQL)

Security
IAM
IAM Instance Profiles and Roles
AWS Organizations
AWS Security Token Service (STS)
AWS Config
Amazon CloudWatch Logs
Amazon Elasticserach Service
Amazon VPC Security Groups
Amazon Key managment Service (KMS)

Cost Optimization
Amazon CloudWatch
AWS Trusted Advisor
Reserved Instances
Spot Instances
AWS CloudFormation
Cost Explorer
Billing Alerts

Operation Excellence 
AWS CloudFormation
AWS CodeCommit
AWS CodePipeline
AWS Lambda
AWS Config
AWS CloudWatch
AWS CloudWatch Logs
Simple Notification Service SNS
Amazon Athena (to query logs from S3)

Relaibility
99.9 -> 8.76 hours downtime (3 nines)
99.99 -> 52.56 min downtime (4 nines)
99.999 -> 5.26 mins downtime (5 nines)

Higher availablity -> higher cost and complexility 
- Single point of failure -> SPOF
-Lack of 
--> Automation
--> Elasticity
--> Instumenation 
- Performance 
- Locally stored state

Mean Time Bewteen Failure -> MTBF
Mean Time to Recover -> MTTR

-- Fault isolation zones (AZ & Regions)
-- Redundancy 
-- Microservice arch
-- Recovery Oriented Computing
-- Distributed system best practices
-- Avoid single point of failure
-- Automate everything
-- Scale when needed
-- Monitor Everything
-- Build stateless application


